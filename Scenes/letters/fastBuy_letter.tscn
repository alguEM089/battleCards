[gd_scene load_steps=8 format=3 uid="uid://voboq1nt5sfc"]

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_rv3h1"]
load_path = "res://.godot/imported/base_letter.png-f7043a39df8826049ce61324d83372f6.ctex"

[sub_resource type="GDScript" id="GDScript_8iqhb"]
script/source = "extends BaseLetter

func _ready() -> void:
	init_letter(\"fastBuy\")
"

[sub_resource type="Animation" id="Animation_suf66"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(64, 96)]
}

[sub_resource type="Animation" id="Animation_0dfwm"]
resource_name = "select"
length = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1.75, 1.75)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(64, 96), Vector2(64, 96)]
}

[sub_resource type="Animation" id="Animation_o01fg"]
resource_name = "unselect"
length = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(1.75, 1.75), Vector2(1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(64, 96), Vector2(64, 96)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_dyl4i"]
_data = {
"RESET": SubResource("Animation_suf66"),
"select": SubResource("Animation_0dfwm"),
"unselect": SubResource("Animation_o01fg")
}

[sub_resource type="GDScript" id="GDScript_c3kk6"]
script/source = "extends Effects

@export_range(1, 10) var quant = 1
@export_range(1, 10) var mana_gain = 1

func effect() -> void:
	Global.purchage_letters(quant, mana_gain)

	letter.used_letter()
"

[node name="fastBuy_letter" type="TextureButton" node_paths=PackedStringArray("effect_node")]
offset_left = -32.0
offset_top = -48.0
offset_right = 32.0
offset_bottom = 48.0
pivot_offset = Vector2(32, 96)
focus_mode = 0
mouse_default_cursor_shape = 2
toggle_mode = true
texture_normal = SubResource("CompressedTexture2D_rv3h1")
script = SubResource("GDScript_8iqhb")
effect_node = NodePath("buy_letters")
metadata/_edit_horizontal_guides_ = [48.0]

[node name="anim" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_dyl4i")
}

[node name="label_mana_cost" type="Label" parent="."]
layout_mode = 0
offset_left = 47.0
offset_top = 56.0
offset_right = 56.0
offset_bottom = 88.0
text = "0"
horizontal_alignment = 1
vertical_alignment = 1

[node name="label_recharge_time" type="Label" parent="."]
self_modulate = Color(0, 0, 0, 1)
layout_mode = 0
offset_left = 50.0
offset_top = 6.0
offset_right = 66.0
offset_bottom = 38.0
scale = Vector2(0.5, 0.5)
text = "0"
horizontal_alignment = 1
vertical_alignment = 1

[node name="buy_letters" type="Node" parent="." node_paths=PackedStringArray("letter")]
script = SubResource("GDScript_c3kk6")
letter = NodePath("..")

[connection signal="mouse_entered" from="." to="." method="_on_mouse_entered"]
[connection signal="mouse_exited" from="." to="." method="_on_mouse_exited"]
[connection signal="pressed" from="." to="." method="_on_pressed"]
